version: '3'

services:
  mysql8.0:
    # 镜像名
    image: mysql:8.0.21
    # 容器名(以后的控制都通过这个)
    container_name: mysql8.0
    # 重启策略
    restart: always
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      # root 密码
      MYSQL_ROOT_PASSWORD: root
      # 初始化数据库(后续的初始化sql会在这个库执行)
      MYSQL_DATABASE: bms
      # 初始化用户(不能是root 会报错, 后续需要给新用户赋予权限)
      MYSQL_USER: test
      # 用户密码
      MYSQL_PASSWORD: 123456
      # 映射端口
    ports:
      - 3306:3306
    volumes:
      # 数据挂载
      #- /root/mysql/data/:/var/lib/mysql/
      # 配置挂载
      - ../doc/conf/:/etc/mysql/conf.d/
      # 初始化目录挂载 (root用户执行初始化)
      - ../doc/:/docker-entrypoint-initdb.d/
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1

  bms:
    #    build: .
    image: 'maship/bms:latest'
    container_name: bms
    restart: on-failure:3
    environment:
      - serviceName=bms
      - LOG_FILE=/tmp/logs
      - JAVA_OPTS=-Dfile.encoding=UTF-8 -Dsun.jun.encoding=UTF-8 -Dio.netty.leakDetectionLevel=advanced -Djava.security.egd=file:/dev/./urandom
    ports:
      - '8081:8080'
    depends_on:
      - mysql8.0
#    docker的container内，本身是一个微小的主机，那么请求127.0.0.1或者localhost，自然是请求到了container本身的网络，而无法抵达宿主机
    extra_hosts:
      - "host.docker.internal:host-gateway"